<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE app [
 <!ENTITY name "VcfTreePack">
 <!ENTITY package "com.github.lindenb.jvarkit.tools.treepack">
]>
<app xmlns="http://github.com/lindenb/jvarkit/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" app="&name;" package="&package;" __placeholder__="1"
		extends="com.github.lindenb.jvarkit.tools.treepack.AbstractTreePackCommandLine"
	>
<description>Create a TreeMap from one or more VCF. Ouput is a SVG file.</description>

<options>
	<option name="configFile" opt="c" longopt="config" argname="CONFIG.XML" type="input-file">
		<description>XML config file</description>
	</option>
	<option name="dimensionStr" opt="x" longopt="dimension" type="string" default="1000x1000">
		<description>dimension of the output rectangle</description>
	</option>
</options>

<documentation>
<h:h3>Synopsis</h:h3>

<h:pre>$ java -jar dist/vcftreepack.jar -c config.xml (stdin|vcf1 vcf2 vcf3) &gt; out.svg</h:pre>

<h:h3>XML config</h:h3>

XML root is &lt;treepack&gt;. children are '&lt;node&gt;' or '&lt;sample&gt;'.
A '&lt;node&gt;' has an attribute 'name'. The text content of the &lt;node&gt; will be evaluated as a javascript expression with the embedded javascript engine.
The javascript engine injects :
<h:ul>
	<h:li><h:b>variant</h:b> a <h:a>https://samtools.github.io/htsjdk/javadoc/htsjdk/htsjdk/variant/variantcontext/VariantContext.html</h:a></h:li>
	<h:li><h:b>header</h:b> a <h:a>https://samtools.github.io/htsjdk/javadoc/htsjdk/htsjdk/variant/vcf/VCFHeader.html</h:a>.</h:li>
	<h:li><h:b>style</h:b> a java.util.concurrent.atomic.AtomicReference&lt;String&gt; that, if it is not empty, will be used as the SVG/CSS style of the current node.</h:li>
</h:ul>
A special node '&lt;sample&gt;' can be called once. &lt;sample&gt; will generate a new node splitting by sample name and injects a new variable '<h:b>genotype</h:b>' a https://samtools.github.io/htsjdk/javadoc/htsjdk/htsjdk/variant/variantcontext/Genotype.html .
A special node '&lt;alt&gt;' can be called once. &lt;sample&gt; will generate a new node splitting by ALT allele name and injects a new variable '<h:b>alt</h:b>' a https://samtools.github.io/htsjdk/javadoc/htsjdk/htsjdk/variant/variantcontext/Allele.html .

<h:h3>Example</h:h3>

<h:pre>$ cat config.xml
<![CDATA[
<?xml version="1.0"?>
<treepack>
  <samples/>
  <node name="ref">variant.getReference()</node>
  <node name="alt">variant.getAlternateAlleles()</node>
</treepack>
]]>


<h:pre class="xml"><![CDATA[
<?xml version="1.0"?>
<treepack>
  <samples/>
  <node name="indels">
  function fun() {
	  if(variant.isSNP()) return null;
	  if(genotype.isNoCall() || genotype.isHomRef()) return null;
	  return "INDEL";
	  }
fun(); 
  </node>
</treepack>
]]>
$ echo 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 X Y MT |\
tr " " "\n" |\
awk '{printf("ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606/VCF/ByPopulation/YRI-1412-%s.vcf.gz\n",$1);}' |\
xargs java -jar dist/vcftreepack.jar -c config.xml -x 5000x5000 &gt; output.svg
</h:pre>

<h:img src="https://pbs.twimg.com/media/BeR15u-CAAAwE9Z.png:large"/>

<h:h3>See also</h:h3>

<h:ul>
	<h:li><h:a>BamTreePack</h:a></h:li>
	<h:li><h:a>FastqRecordTreePack</h:a></h:li>
	<h:li><h:a>http://www.cs.umd.edu/hcil/treemap-history/</h:a></h:li>
</h:ul>


</documentation>
<!-- __PLACEHOLDER__ -->

</app>
