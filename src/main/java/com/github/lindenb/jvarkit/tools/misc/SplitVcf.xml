<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE app [
 <!ENTITY name "SplitVcf">
 <!ENTITY package "com.github.lindenb.jvarkit.tools.misc">
]>
<app xmlns="http://github.com/lindenb/jvarkit/"
	 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	 xmlns:xi="http://www.w3.org/2001/XInclude"
	 xmlns:h="http://www.w3.org/1999/xhtml"
	 xmlns:svg="http://www.w3.org/2000/svg"
	 app="&name;"
	 package="&package;"
	 __placeholder__="1"
	 ui-swing="true"
	>

<description>Split a VCF.</description>
<input type="vcf"/>

<options>
		<option name="chromGroupFile" opt="g" longopt="groupfile" argname="GROUP" type="input-file">
			<description>Chromosome group file. Intervals are 1-based. If undefined, splitvcf will use the sequence dictionary to output one vcf per contig.</description>
		</option>
		<option name="UNDERTERMINED_NAME" opt="u" longopt="unmapped"  type="string" default="OTHER">
			<description>unmapped interval name</description>
		</option>
	<option name="multiIntervalEnabled" opt="m" longopt="multi"  type="boolean" default="false">
			<description>if set, allow one variant to be mapped on multiple chromosome group (the record is duplicated)</description>
		</option>
	</options>
<documentation>
<h:h3>Output</h:h3>
Output filename (option -o) MUST contain the word __GROUPID__.

<h:h3>Example</h:h3>
<h:pre class="bash">$ cat groups.txt
G1	10:112583204-112583210
G2	11
</h:pre>


<h:pre class="bash">$ java -jar dist/splitvcf.jar  -o tmp__GROUPID__.vcf.gz -g groups.txt in.vcf
$ ls tmp*
tmpG1.vcf.gz
tmpG2.vcf.gz
tmpOTHER.vcf.gz
</h:pre>

<h:h3>See also</h:h3>
<h:ul>
<h:li><h:a>https://github.com/lindenb/jvarkit/wiki/SplitBam3</h:a></h:li>
</h:ul>

</documentation>

<!-- __PLACEHOLDER__ -->
</app>
