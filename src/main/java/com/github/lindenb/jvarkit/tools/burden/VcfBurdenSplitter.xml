<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE app [
 <!ENTITY name "VcfBurdenSplitter">
 <!ENTITY package "com.github.lindenb.jvarkit.tools.burden">
]>
<app xmlns="http://github.com/lindenb/jvarkit/"
	 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	 xmlns:xi="http://www.w3.org/2001/XInclude"
	 xmlns:h="http://www.w3.org/1999/xhtml"
	 xmlns:svg="http://www.w3.org/2000/svg"
	 xmlns:galaxy="https://usegalaxy.org/"
	 app="&name;"
	 package="&package;"
	 __placeholder__="1"
	>

<description>Split VCF Using a Burden Splitter (by gene, transcript, etc..)</description>
<input type="vcf"/>
<snippet id="sorting-collection"/>
<snippet id="write-vcf"/>

<options>
	
	<option galaxy:ignore="true" name="listSplitter" type="boolean" longopt="listsplitters" opt="ls" default="false">
		<description>List available splitters and exit</description>
	</option>
	<option name="splitterName" type="string" longopt="splitterName" opt="sp" default="vepso">
		<description>Splitter Name</description>
		<galaxy:param type="string"  >
             <galaxy:option value="vep" >vep. All Ensembl Variant Effect Prediction</galaxy:option>
             <galaxy:option value="vepso" selected="true">vepso : VEP affecting proteins</galaxy:option>
             <galaxy:option value="vephd">vephd : VEP high damage</galaxy:option>
		</galaxy:param>
	</option>
	<option name="acceptFiltered" type="boolean" longopt="ignorefilter" opt="if" default="false">
		<description>accept variants having a FILTER column. Default is ignore variants with a FILTER column</description>
	</option>
	<option galaxy:ignore="true" name="galaxyHtmlPath" type="string" longopt="galaxyhtml" opt="gh" default="">
		<description>When used with galaxy, the files will be expanded in that path. </description>
	</option>
	<option name="enableVepFeature" opt="vepFeature" longopt="vepFeature" type="boolean" default="false">
		<description>enable VEP 'FEATURE' (transcript)</description>
	</option>
	<option name="enableVepHgnc" opt="vepHgnc" longopt="vepHgnc" type="boolean" default="false">
		<description>enable VEP 'HGNC'</description>
	</option>
	<option name="enableVepEnsg" opt="vepEnsg" longopt="vepEnsg" type="boolean" default="false">
		<description>enable VEP 'ENSG'</description>
	</option>
	<option name="enableVepEnst" opt="vepEnst" longopt="vepEnst" type="boolean" default="false">
		<description>enable VEP 'FEATURE' starting with 'ENST'</description>
	</option>
	<option name="enableVepEnsp" opt="vepEnsp" longopt="vepEnsp" type="boolean" default="false">
		<description>enable VEP 'ENSP'</description>
	</option>
	<option name="enableVepSymbol" opt="vepSymbol" longopt="vepSymbol" type="boolean" default="false">
		<description>enable VEP 'SYMBOL'</description>
	</option>
	<option name="enableVepRefSeq" opt="vepRefSeq" longopt="vepRefSeq" type="boolean" default="false">
		<description>enable VEP 'SYMBOL'= XM_ or NM_</description>
	</option>
	
	<option name="enableAllNM" opt="all_nm" longopt="all_nm" type="boolean" default="false">
		<description>enable grouping by ALL_NM : gene not empty and transcript starting with NM_ </description>
	</option>
	<option name="enableAllRefSeq" opt="all_refseq" longopt="all_refseq" type="boolean" default="false">
		<description>enable grouping by ALL_REFSEQ: gene not empty and transcript NOT starting with ENST</description>
	</option>
	
	<option name="enableAllEnst" opt="all_enst" longopt="all_enst" type="boolean" default="false">
		<description>enable grouping by ALL_ENST: gene starting with ENST</description>
	</option>
	<option name="enableAllTranscript" opt="all_transcripts" longopt="all_transcripts" type="boolean" default="false">
		<description>enable grouping by all transcript for a gene using gene name (e.g Nm_12345)</description>
	</option>
	<option name="enableAllGenes" opt="all_genes" longopt="all_genes" type="boolean" default="false">
		<description>enable grouping by all transcript for a gene using transcript name (e.g PRKCB1) </description>
	</option>
	<option name="allFilteredFileOut" opt="all_filtered" longopt="all_filtered" type="output-file" >
		<description>If defined, the group where ALL the variants are FILTERED will be saved here.</description>
	</option>
</options>

<galaxy:galaxy>
	<galaxy:command>(gunzip -c ${input} 2&gt; /dev/null || cat ${input}) |  java  -jar  \$JVARKIT_DIST/vcfburdensplitter.jar  -o '${outputFile}.zip'    -galaxyHtmlPath "$html_file.files_path"  -cas '${casesFile}'  -ctrl '${controlsFile}'  -sp '${splitterName}'   ${acceptFiltered}    -o '${outputFile}.zip' &amp;&amp; cp '${outputFile}.zip' '${outputFile}' &amp;&amp; rm '${outputFile}.zip'</galaxy:command>
  <galaxy:outputs>
    <galaxy:data format="zip" name="outputFile"/>
  </galaxy:outputs>
</galaxy:galaxy>


<documentation>
<h:h3>Description</h:h3>
This tools reads a VCF  (it should be sorted on chrom/POS and annotated with Ensembl Variation Predictor) and split data into genomic area of interest (g√©ne, transcripts...).
For each area, a small VCF is produced and a Fished test is computed.
The final output is a set of concatenated VCF files. You could insert in a database using VcfDerby01


</documentation>

<!-- __PLACEHOLDER__ -->
</app>
